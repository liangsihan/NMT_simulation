# standard settings for charm.py
#  left-hand side should be in JSON synthax
#  int = 1
#  float = 1.2
#  bool = true/false (lower case)
#  str = "string" (double quotes)
#  list = [1, 2, 3]
#  dict = {"a": 1, "b": 2} (key must be string)

[preprocess]
denoise = false


# General settings for running samseg
[samseg] 
# If threads is 0 the code uses all available threads, otherwise specify a positive integer number
threads = 8
atlas_name = "charm_atlas_mni"

# Custom intensity parameter file (default: empty)
# Note if a file is provided it should be in the same 
# folder as the settings.ini file
gmm_parameter_file = ""

# Set to "mni" to use the "initmni" initialization below.
# Note this only works when a T1-weighted input is available.
# If no T1w scan is available, switch to "atlas".
init_type = "atlas"

# This is the default initialization for the segmentation
# when a T1-weighted input is available
[initmni]
# Translation scales for the optimizer
# (don't change this unless you know what you're doing default 1e-5)
translation_scale = -100
# Maximum number of iterations
max_iter = 300
# Shrink factor for the optimizer defined in 2^f.
# I.e., a shrink factor of 2 corresponds to downsampling
# by 2^2 = 4. Although 1 and 0 are valid inputs, less downsampling
# makes the initialization extremely slow, so not recommended.
shrink_factors = [2, 1, 0]
# A value for filling the background
bg_value = 0
# Smoothing factor for the intensities for optimization (in mm)
smoothing_factors = [4.0, 2.0, 0.0]
# Center-of-mass initialization, if set to zero the geometrical
# center is used instead.
center_of_mass = true
# Random sampling factor of the metric
samp_factor = 1.0


[initatlas]
# Scaling factors to search through as an initialization default: [0.85, 0.9, 0.95]
affine_scales = [[0.85, 0.85, 0.85], [0.9, 0.9, 0.85], [0.95, 0.95, 0.85]]
# Rotations (around LR axis, degrees) to search through default: [-7, -3.5, 0, 3.5, 7]
affine_rotations = [-7, -3.5, 0, 3.5, 7]
# Horizontal shifts (in mm) to search through default: [-20.0, -10.0, 0, 10.0, 20.0]
affine_horizontal_shifts = [-20.0, -10.0, 0, 10.0, 20.0]
# Vertical shifts to search through (in mm) default: [-10.0, 0.0, 10.0]
affine_vertical_shifts = [-10.0, 0.0, 10.0]
# Neck deformation bounds default: [-0.4, 0.1]
neck_search_bounds = [-0.3, 0.1]
# Downsampling target resolution (in mm) default: 2
downsampling_factor_affine = 2

[segment]
# Downsampling target resolution in mm default [2.0, 1.0]
downsampling_targets = [2.0, 1.0]
# Kernel size of bias field basis functions (in mm),
# smaller kernels are more flexible default: 70
bias_kernel_width = 70
# Smoothing factor for background mask in mm default: 4.0
background_mask_sigma = 4.0
# Threshold for masking background away default: 0.001
background_mask_threshold = 0.001
# Deformation penalty on the seg mesh  default: 0.1
mesh_stiffness = 0.1
# How to model Gaussian when multimodal data default: false
diagonal_covariances = false
# Downweighing factor for CSF when using T1+T2
csf_factor = 0.3

[surfaces]
# settings for creation of central GM surfaces
#If processes is 0, a separate process will be started for each surface
processes = 2
# Which central surfaces to reconstruct
surf = ["lh", "rh"]
# Which pial surfaces to reconstruct (has to be a subset of the central surfaces)
pial = ["lh", "rh"]
# see createCS in simnibs.segmentation.brain_surface 
# for details of the below parameters
vdist = [1.0, 0.75]
voxsize_pbt = [0.5, 0.25]
voxsize_refinecs = [0.75, 0.5]
th_initial = 0.714
no_selfintersections = true
# Whether to ensure a minimal GM layer by filling in from the lh and rh central surfaces
fillin_gm_from_surf = true
# Whether to use the pial surfaces to reconstruct thin CSF structures
open_sulci_from_surf = true
# Prevent relabeling to GM in central brain regions: make ROI using tissues in labeling.nii.gz
exclusion_tissues_fillin_gm = {"left_cerebral_wm": 2,
                              "right_cerebral_wm": 41,
                              "stuff_to_exclude": [4, 10, 14, 16, 24, 28, 43, 49, 60]}
# Prevent relabeling to CSF in hippocampi and amygdalae: make ROI using tissues in labeling.nii.gz
exclusion_tissues_open_csf = [17, 18, 53, 54]                      
                              
[mesh]
# Define thickness-dependent element sizes
# 	"range": upper and lower cut-offs for element sizes
# 	"slope": the smaller the finer the mesh
# 	"standard": applies to all tissues not defined otherwise
elem_sizes = {"standard": {"range": [1, 5], "slope": 1.0},
                     "1": {"range": [1, 7], "slope": 1.0},
                     "2": {"range": [1, 2], "slope": 1.0},
                     "5": {"range": [1, 10], "slope": 0.6}}
# Size of triangular kernel to smooth the size field. Can be 0.
smooth_size_field = 2			 
# Maximum size for the triangles of the outermost surface.
# 	Set to None to apply the same scaling as for the other elements.
skin_facet_size = 2.0
# Relation between thickness and maximally allowed distance of 
# boundary facets to "true" label boundary
# 	"range": upper and lower cut-offs for the boundary facet distances
# 	"slope": the smaller the better the mesh follows the segmentation
facet_distances = {"standard": {"range": [0.1, 3], "slope": 0.5}}
# Whether to optimize the mesh using Lloyd. Takes some time 
# but significanly improves element quality
optimize = false
# Whether to remove spikes from the mesh to create smoother mesh surfaces
remove_spikes = true
# Add outer surface to mesh using given tag. Set to false to disable.
skin_tag = 1005
# Hierarchy of surface tags (as list) that determines which triangle 
# of a twin pair is kept. Set to false to use standard.
hierarchy = false
# Number of smoothing steps applied to the final surfaces. Can be 0.
smooth_steps = 10
# Number of addtional smoothing steps applied to the skin. Can be 0.
skin_care = 20
